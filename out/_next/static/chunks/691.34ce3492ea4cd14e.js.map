{"version":3,"file":"static/chunks/691.34ce3492ea4cd14e.js","mappings":"kLAAO,IAAMA,EAAS,CAClBC,QAAS,CAAEC,QAAS,IAAMC,WAAY,CAAEC,SAAU,GAAI,CAAE,EACxDC,OAAQ,CAAEH,QAAS,CAAE,CACzB,EAsBaI,EAAc,CACvBL,QAAS,CAAEM,MAAO,OAAQJ,WAAY,CAAEC,SAAU,EAAGI,KAAM,SAAU,CAAE,EACvEH,OAAQ,CAAEE,MAAO,CAAE,CACvB,EAEaE,EAAc,CACvBR,QAAS,CAAES,OAAQ,OAAQP,WAAY,CAAEC,SAAU,EAAGI,KAAM,SAAU,CAAE,EACxEH,OAAQ,CAAEK,OAAQ,CAAE,CACxB,mIC3BA,IAAMC,EAAU,GAAiBC,MAAMC,GAAKC,IAAI,CAAC,GAASC,EAAIC,IAAI,IAOlE,SAASC,EAAQC,CAA2C,CAAE,IAA7C,CAAEC,aAAAA,CAAAA,CAAyC,CAA3CD,EACPE,EAAQ,IAAIC,MAAMF,GAAc,CACtC,MACI,GAAAG,EAAAC,GAAA,EAACC,MAAAA,CACGC,UAAU,oIACTL,EAAMM,GAAG,CAAC,CAACC,EAAGC,IAEP,GAAAN,EAAAC,GAAA,EAACC,MAAAA,CAAYC,UAAU,uBACnB,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,qDADTG,KAO9B,CAEe,SAASC,EAAgBX,CAAgC,CAAE,IAAlC,CAAEY,MAAAA,CAAAA,CAA8B,CAAhCZ,EAC9B,CAAEa,KAAAA,CAAAA,CAAMC,UAAAA,CAAAA,CAAWC,MAAAA,CAAAA,CAAO,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,EAAsBJ,EAAMK,GAAG,CAAExB,UACpE,EAAkB,GAAAW,EAAAC,GAAA,EAAAD,EAAAc,QAAA,KACdJ,EAAkB,GAAAV,EAAAC,GAAA,EAACN,EAAAA,CAAQE,aAAcW,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOX,YAAY,EAAGW,MAAAA,EAAAA,KAAAA,EAAAA,EAAOX,YAAY,CAAG,EAAE,GACvF,CAACY,GAAQA,EAAKM,MAAM,CAAG,EAAU,GAAAf,EAAAC,GAAA,EAAAD,EAAAc,QAAA,KAEjC,GAAAd,EAAAC,GAAA,EAACe,EAAAA,CAAAA,CAAAA,GAAU,EAACC,QAAQ,SAChBC,YAAY,UACZC,SAAUzC,EAAAA,EAAMA,CAChB0C,SAAU,CAAEC,KAAM,EAAK,EACvBlB,UAAU,2JACTM,EAAKL,GAAG,CAAC,CAACkB,EAAMhB,IAET,GAAAN,EAAAC,GAAA,EAACC,MAAAA,CAAYC,UAAU,mFACnB,GAAAH,EAAAC,GAAA,EAACsB,IAAKA,CAACpB,UAAU,cAAcqB,IAAK,GAAqCC,MAAA,CAAlCC,+BAAuBJ,EAAKK,KAAK,EAAIC,KAAI,GAACC,IAAK,GAAYJ,MAAA,CAATH,EAAKO,GAAG,KAD3FvB,KAXR,AAkBtB","sources":["webpack://_N_E/./src/components/animation/animate.tsx","webpack://_N_E/./src/components/common/ClientComponent.tsx","webpack://_N_E/<anon>"],"sourcesContent":["export const Reveal = {\r\n    visible: { opacity: 0.99, transition: { duration: 1.5 } },\r\n    hidden: { opacity: 0 },\r\n}\r\n\r\nexport const FadeInLeft = {\r\n    visible: { opacity: 1, scale: 1, x: 0, transition: { duration: 1, ease: \"easeOut\" } },\r\n    hidden: { opacity: 0, scale: 0, x: -500 }\r\n};\r\n\r\nexport const FadeInRight = {\r\n    visible: { opacity: 1, scale: 1, x: 0, transition: { duration: 1, ease: \"easeOut\" } },\r\n    hidden: { opacity: 0, scale: 0, x: 500 }\r\n};\r\n\r\nexport const FadeInBottom = {\r\n    visible: { opacity: 1, scale: 1, y: 0, transition: { duration: 1, ease: \"easeOut\" } },\r\n    hidden: { opacity: 0, scale: 0, y: -500 }\r\n}\r\n\r\nexport const FadeInTop = {\r\n    visible: { opacity: 1, scale: 1, y: 0, transition: { duration: 1, ease: \"easeOut\" } },\r\n    hidden: { opacity: 0, scale: 0, y: 500 }\r\n}\r\n\r\nexport const ExpandXAxis = {\r\n    visible: { width: \"100%\", transition: { duration: 2, ease: \"easeOut\" } },\r\n    hidden: { width: 0 }\r\n}\r\n\r\nexport const ExpandYAxis = {\r\n    visible: { height: \"100%\", transition: { duration: 4, ease: \"easeOut\" } },\r\n    hidden: { height: 0 }\r\n}\r\n\r\nexport function randomInt({ min, max }: { min: number, max: number }) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\ntype Coordinate = {\r\n    x: number,\r\n    y: number,\r\n}\r\n\r\nexport const MessToOrder = ({ coordinate }: { coordinate: Coordinate }) => {\r\n    return {\r\n        visible: {\r\n            opacity: 1,\r\n            scale: 1,\r\n            y: 0,\r\n            x: 0,\r\n            transition: {\r\n                duration: 0.5,\r\n                ease: \"easeOut\"\r\n            }\r\n        },\r\n        hidden: {\r\n            opacity: 0,\r\n            scale: 0,\r\n            y: coordinate.y,\r\n            x: coordinate.x\r\n        }\r\n    }\r\n}\r\n\r\nexport const Sentence = {\r\n    hidden: { opacity: 1 },\r\n    visible: {\r\n        opacity: 1,\r\n        transition: {\r\n            delay: 0.5,\r\n            staggerChildren: 0.08,\r\n        }\r\n    }\r\n}\r\n\r\nexport const Letter = {\r\n    hidden: { opacity: 0, y: 50 },\r\n    visible: {\r\n        opacity: 1,\r\n        y: 0,\r\n    }\r\n}","import Image from 'next/image';\r\nimport { motion } from \"framer-motion\";\r\nimport { ClientModel } from '@/model/props';\r\nimport { Reveal } from '@/components/animation/animate';\r\nimport useSWR from 'swr';\r\n\r\nconst fetcher = (url: string) => fetch(url).then((res) => res.json());\r\n\r\ninterface ClientType {\r\n    api: string,\r\n    loadingItems?: Number\r\n}\r\n\r\nfunction Loading({ loadingItems }: { loadingItems?: Number }) {\r\n    const items = [...Array(loadingItems)];\r\n    return (\r\n        <div\r\n            className=\"flex flex-row flex-1 flex-nowrap overflow-x-auto lg:grid lg:grid-cols-5 md:grid md:grid-cols-3 gap-6 w-full items-center\">\r\n            {items.map((_, i) => {\r\n                return (\r\n                    <div key={i} className='grow w-full'>\r\n                        <div className=\"aspect-square w-full animate-pulse bg-secondary\" />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function ClientComponent({ props }: { props: ClientType }) {\r\n    const { data, isLoading, error } = useSWR<ClientModel[]>(props.api, fetcher);\r\n    if (error) return <></>\r\n    if (isLoading) return <Loading loadingItems={props?.loadingItems ? props?.loadingItems : 15} />\r\n    if (!data || data.length < 1) return <></>\r\n    return (\r\n        <motion.div initial=\"hidden\"\r\n            whileInView=\"visible\"\r\n            variants={Reveal}\r\n            viewport={{ once: true }}\r\n            className=\"flex flex-row flex-1 flex-nowrap overflow-x-auto lg:grid lg:grid-cols-5 md:grid md:grid-cols-4 sm:grid sm:grid-cols-3 gap-6 w-full items-center\">\r\n            {data.map((item, i) => {\r\n                return (\r\n                    <div key={i} className='grow w-full xs:h-[300px] border-2 border-primary aspect-square relative'>\r\n                        <Image className=\"w-full p-10\" src={`${process.env.BASE_URL + item.image}`} fill alt={`${item.alt}`} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </motion.div>\r\n    )\r\n}\r\n"],"names":["Reveal","visible","opacity","transition","duration","hidden","ExpandXAxis","width","ease","ExpandYAxis","height","fetcher","fetch","url","then","res","json","Loading","param","loadingItems","items","Array","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","className","map","_","i","ClientComponent","props","data","isLoading","error","useSWR","api","Fragment","length","motion","initial","whileInView","variants","viewport","once","item","Image","src","concat","process","image","fill","alt"],"sourceRoot":""}