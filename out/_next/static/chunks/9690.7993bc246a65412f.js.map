{"version":3,"file":"static/chunks/9690.7993bc246a65412f.js","mappings":"gLAaA,IAAMA,EAAW,CAACC,EAAeC,IACtBC,MAAMD,EAAMD,EAAQ,GACtBG,IAAI,CAACC,KAAAA,GACLC,GAAG,CAAC,CAACC,EAAGC,IAAMA,EAAIP,GAGrBQ,EAAa,CAACC,EAAqBC,IAAsB,KACvDC,EAGAA,EAFAD,GAAa,EAEL,EAIiD,EAG7D,IAAME,EAAQ,CACVZ,MAAOa,KAAKC,KAAK,CAACL,EAAcE,EAAQ,GACxCV,IAAKY,KAAKC,KAAK,CAACL,EAAcE,EAAQ,EAC1C,EAEIC,CAAAA,EAAMZ,KAAK,CAAG,GAAM,GAAKY,EAAMX,GAAG,CAAG,IAAMS,CAAAA,IAC3CE,EAAMZ,KAAK,EAAI,EACfY,EAAMX,GAAG,EAAI,GAGjB,IAAIc,EACAN,EAAcE,EACRZ,EAASc,KAAKG,GAAG,CAACJ,EAAMZ,KAAK,CAAEU,EAAYC,GAAQE,KAAKG,GAAG,CAACJ,EAAMX,GAAG,CAAES,IACvEX,EAAS,EAAGc,KAAKG,GAAG,CAACN,EAAWC,EAAQ,GAAG,CAE/CM,EAAW,CAACC,EAAeC,IAA+BJ,EAAMK,MAAM,CAAG,IAAMV,EAAYS,EAAO,CAACD,EAAM,CAU/G,OARiB,IAAbH,CAAK,CAAC,EAAE,EACRA,CAAAA,EAAQE,EAAS,EAAG,CAAC,EAAG,MAAM,EAAEI,MAAM,CAACN,EAAAA,EAGvCA,CAAK,CAACA,EAAMK,MAAM,CAAG,EAAE,CAAGV,GAC1BK,CAAAA,EAAQA,EAAMM,MAAM,CAACJ,EAASP,EAAW,CAAC,MAAOA,EAAU,IAGxDK,CACX,EAEe,SAASO,EAAoBC,CAAqC,CAAE,IAAvC,CAAEC,MAAAA,CAAAA,CAAmC,CAArCD,EACxC,GAAI,CAACC,EAAMC,gBAAgB,CAAE,MAAO,GAAAC,EAAAC,GAAA,EAAAD,EAAAE,QAAA,KACtB1B,MAAM2B,IAAI,CAAC,CAAET,OAAQI,EAAMd,SAAS,EAAI,CAACJ,EAAGC,IAAMA,EAAI,GACpE,IAAMK,EAAQJ,EAAWgB,EAAMf,WAAW,CAAE,KAC5C,MACI,GAAAiB,EAAAI,IAAA,EAACC,MAAAA,CAAIC,UAAU,wEAEPR,EAAMS,WAAW,EACb,GAAAP,EAAAC,GAAA,EAACO,IAAIA,CAAkBC,aAAW,gBAAgBH,UAAY,iEAC1DI,KAAM,CAAEC,SAAUb,EAAMc,QAAQ,CAAEC,MAAO,CAAEC,KAAOhB,EAAMf,WAAW,CAAG,CAAG,CAAE,WAAG,YADvE,YAOfG,EAAMP,GAAG,CAAC,CAACa,EAAOX,IACd,QAAIW,EAAwB,MAExB,GAAAQ,EAAAC,GAAA,EAACO,IAAIA,CAASC,aAAY,eAAiBd,MAAA,CAAFd,EAAE,KAAIyB,UAAW,kEAAqJX,MAAA,CAAnFH,GAASM,EAAMf,WAAW,CAAG,wBAA0B,2BAA2B,CAAC,KAC3M2B,KAAM,CAAEC,SAAUb,EAAMc,QAAQ,CAAEC,MAAO,CAAEC,KAAMtB,CAAM,CAAE,WACxDA,GAFMX,EAFa,EAUhCiB,EAAMiB,OAAO,EACT,GAAAf,EAAAC,GAAA,EAACO,IAAIA,CAAcQ,OAAQ,GAAOP,aAAW,YAAYH,UAAY,iEACjEI,KAAM,CAAEC,SAAUb,EAAMc,QAAQ,CAAEC,MAAO,CAAEC,KAAOhB,EAAMf,WAAW,CAAG,CAAG,CAAE,WAAG,QADvE,UAQ/B","sources":["webpack://_N_E/./src/components/common/PaginationComponent.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import Link from \"next/link\";\r\n\r\ninterface PaginationProps {\r\n    enablePagination: boolean;\r\n    items: number;\r\n    pageSize: number;\r\n    currentPage: number;\r\n    pathName: string;\r\n    previousUrl: string | null;\r\n    nextUrl: string | null;\r\n    pageCount: number;\r\n}\r\n\r\nconst getRange = (start: number, end: number) => {\r\n    return Array(end - start + 1)\r\n        .fill(undefined)\r\n        .map((_, i) => i + start)\r\n}\r\n\r\nconst pagination = (currentPage: number, pageCount: number) => {\r\n    let delta: number\r\n    if (pageCount <= 5) {\r\n        // delta === 7: [1 2 3 4 5]\r\n        delta = 5\r\n    } else {\r\n        // delta === 2: [1 ... 4 5 6 ... 10]\r\n        // delta === 4: [1 2 3 4 5 ... 10]\r\n        delta = currentPage > 4 && currentPage < pageCount - 3 ? 2 : 2\r\n    }\r\n\r\n    const range = {\r\n        start: Math.round(currentPage - delta / 2),\r\n        end: Math.round(currentPage + delta / 2)\r\n    }\r\n\r\n    if (range.start - 1 === 1 || range.end + 1 === pageCount) {\r\n        range.start += 1\r\n        range.end += 1\r\n    }\r\n\r\n    let pages: (string | number)[] =\r\n        currentPage > delta\r\n            ? getRange(Math.min(range.start, pageCount - delta), Math.min(range.end, pageCount))\r\n            : getRange(1, Math.min(pageCount, delta + 1))\r\n\r\n    const withDots = (value: number, pair: (string | number)[]) => (pages.length + 1 !== pageCount ? pair : [value])\r\n\r\n    if (pages[0] !== 1) {\r\n        pages = withDots(1, [1, '...']).concat(pages)\r\n    }\r\n\r\n    if (pages[pages.length - 1] < pageCount) {\r\n        pages = pages.concat(withDots(pageCount, ['...', pageCount]))\r\n    }\r\n\r\n    return pages\r\n}\r\n\r\nexport default function PaginationComponent({ props }: { props: PaginationProps }) {\r\n    if (!props.enablePagination) return <></>\r\n    const pages = Array.from({ length: props.pageCount }, (_, i) => i + 1);\r\n    const range = pagination(props.currentPage, 100)\r\n    return (\r\n        <div className=\"col-span-3 xs:col-span-1 flex flex-row justify-center gap-2\">\r\n            {\r\n                props.previousUrl && (\r\n                    <Link key={'previous'} aria-label=\"Previous Page\" className={`font-dm-sans font-bold border-2 border-partial px-2 rounded-sm`}\r\n                        href={{ pathname: props.pathName, query: { page: (props.currentPage - 1) } }}>\r\n                        Previous\r\n                    </Link>\r\n                )\r\n            }\r\n            {\r\n                range.map((value, i) => {\r\n                    if (value === \"...\") return '...'\r\n                    return (\r\n                        <Link key={i} aria-label={`Page Number ${i} `} className={`font-dm-sans font-bold border-2 border-partial px-2 rounded-sm ${value == props.currentPage ? 'bg-primary text-white' : 'bg-[#FFFBF2] text-primary'} `}\r\n                            href={{ pathname: props.pathName, query: { page: value } }}>\r\n                            {value}\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                props.nextUrl && (\r\n                    <Link key={'next'} scroll={false} aria-label=\"Next Page\" className={`font-dm-sans font-bold border-2 border-partial px-2 rounded-sm`}\r\n                        href={{ pathname: props.pathName, query: { page: (props.currentPage + 1) } }}>\r\n                        Next\r\n                    </Link>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n"],"names":["getRange","start","end","Array","fill","undefined","map","_","i","pagination","currentPage","pageCount","delta","range","Math","round","pages","min","withDots","value","pair","length","concat","PaginationComponent","param","props","enablePagination","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Fragment","from","jsxs","div","className","previousUrl","Link","aria-label","href","pathname","pathName","query","page","nextUrl","scroll"],"sourceRoot":""}