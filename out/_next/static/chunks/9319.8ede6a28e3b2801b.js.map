{"version":3,"file":"static/chunks/9319.8ede6a28e3b2801b.js","mappings":"gLACA,IAAMA,EAAoBC,IAAQ,IAAMC,QAAAC,GAAA,EAAAC,EAAAC,CAAA,OAAAD,EAAAC,CAAA,SAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,OAA+C,wCAAII,IAAK,KAYjF,SAASC,EAAeC,CAAgC,CAAE,IAAlC,CAAEC,MAAAA,CAAAA,CAA8B,CAAhCD,EACnC,MACI,GAAAE,EAAAC,GAAA,EAAAD,EAAAE,QAAA,WACI,GAAAF,EAAAG,IAAA,EAACC,MAAAA,CAAIC,UAAW,GAAmBC,MAAA,CAAhBP,EAAMM,SAAS,CAAC,kCAC/B,GAAAL,EAAAG,IAAA,EAACI,QAAAA,CAAMC,QAAST,EAAMU,EAAE,CAAEJ,UAAU,0DAC/BN,EAAMQ,KAAK,CAAC,IAAC,GAAAP,EAAAC,GAAA,EAACS,OAAAA,CAAKL,UAAU,wBAAe,SAG7CN,EAAMY,UAAU,CACZ,GAAAX,EAAAC,GAAA,EAACW,WAAAA,CAASH,GAAIV,EAAMU,EAAE,CAAEI,KAAMd,EAAMU,EAAE,CAClCK,YAAaf,EAAMgB,WAAW,CAAEC,SAAQ,GAACC,SAAU,GAAW,CAAElB,EAAMmB,gBAAgB,CAACC,EAAMC,MAAM,CAACC,KAAK,CAAE,EAC3GhB,UAAU,sHAGd,GAAAL,EAAAC,GAAA,EAACqB,QAAAA,CAAMb,GAAIV,EAAMU,EAAE,CAAEI,KAAMd,EAAMU,EAAE,CAAEc,KAAMxB,EAAMwB,IAAI,CACjDT,YAAaf,EAAMgB,WAAW,CAAEC,SAAQ,GAACC,SAAU,GAAW,CAAElB,EAAMmB,gBAAgB,CAACC,EAAMC,MAAM,CAACC,KAAK,CAAE,EAC3GhB,UAAU,gHACjB,CAEL,GAAAL,EAAAC,GAAA,EAACb,EAAAA,CAAAA,OAKjB","sources":["webpack://_N_E/./src/components/common/InputComponent.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import dynamic from \"next/dynamic\";\r\nconst DividerXComponent = dynamic(() => import(\"@/components/common/DividerXComponent\"), { ssr: false });\r\n\r\ninterface InputProps {\r\n    label: string;\r\n    id: string;\r\n    placeHolder: string;\r\n    isTextArea?: boolean | null;\r\n    type: string;\r\n    className?: string;\r\n    onChangeListener: (value: string) => void;\r\n}\r\n\r\nexport default function InputComponent({ props }: { props: InputProps }) {\r\n    return (\r\n        <>\r\n            <div className={`${props.className} flex flex-col gap-6`}>\r\n                <label htmlFor={props.id} className='font-dm-sans font-normal text-2xl select-none'>\r\n                    {props.label} <span className='text-red-600'>*</span>\r\n                </label>\r\n                {\r\n                    props.isTextArea ? (\r\n                        <textarea id={props.id} name={props.id}\r\n                            placeholder={props.placeHolder} required onChange={(event) => { props.onChangeListener(event.target.value) }}\r\n                            className='appearance-none bg-transparent border-none w-full h-20 text-partial font-dm-sans leading-tight focus:outline-none'>\r\n                        </textarea>\r\n                    ) : (\r\n                        <input id={props.id} name={props.id} type={props.type}\r\n                            placeholder={props.placeHolder} required onChange={(event) => { props.onChangeListener(event.target.value) }}\r\n                            className='appearance-none bg-transparent border-none w-full text-partial font-dm-sans leading-tight focus:outline-none' />\r\n                    )\r\n                }\r\n                <DividerXComponent />\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n"],"names":["DividerXComponent","dynamic","Promise","all","__webpack_require__","e","then","bind","ssr","InputComponent","param","props","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Fragment","jsxs","div","className","concat","label","htmlFor","id","span","isTextArea","textarea","name","placeholder","placeHolder","required","onChange","onChangeListener","event","target","value","input","type"],"sourceRoot":""}