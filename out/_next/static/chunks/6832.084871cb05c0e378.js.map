{"version":3,"file":"static/chunks/6832.084871cb05c0e378.js","mappings":"0LAIA,IAAMA,EAAoBC,IAAQ,IAAMC,QAAAC,GAAA,EAAAC,EAAAC,CAAA,OAAAD,EAAAC,CAAA,SAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,OAA+C,0CACjFI,EAAoBP,IAAQ,IAAMG,EAAAC,CAAA,MAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,MAA+C,yCACjFK,EAAqBR,IAAQ,IAAMC,QAAAC,GAAA,EAAAC,EAAAC,CAAA,OAAAD,EAAAC,CAAA,SAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,OAAgD,0CACnFM,EAAU,GAAiBC,MAAMC,GAAKN,IAAI,CAAC,GAASO,EAAIC,IAAI,IAEnD,SAASC,GAAmB,CACvC,GAAM,CAAEC,KAAAA,CAAAA,CAAMC,UAAAA,CAAAA,CAAWC,MAAAA,CAAAA,CAAO,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,EAAwB,GAAyCC,MAAA,CAAtCC,4CAAyCX,UACvG,GACIQ,GACA,CAACF,GAAQA,EAAKM,MAAM,CAAG,EAFL,GAAAC,EAAAC,GAAA,EAAAD,EAAAE,QAAA,KAIlB,GAAAF,EAAAC,GAAA,EAACE,MAAAA,CAAIC,UAAU,2DACX,GAAAJ,EAAAC,GAAA,EAACE,MAAAA,CAAIC,UAAU,sHACX,GAAAJ,EAAAK,IAAA,EAACF,MAAAA,CAAIC,UAAU,gDACX,GAAAJ,EAAAC,GAAA,EAACE,MAAAA,CAAIC,UAAU,8CACX,GAAAJ,EAAAC,GAAA,EAAChB,EAAAA,CAAkBqB,SAAU,2BAA4BF,UAAW,4EAExE,GAAAJ,EAAAC,GAAA,EAACxB,EAAAA,CAAAA,GAEGgB,GAAQA,EAAKc,GAAG,CAAC,CAACC,EAAMC,IAEhB,GAAAT,EAAAK,IAAA,EAACF,MAAAA,WACG,GAAAH,EAAAC,GAAA,EAACf,EAAAA,CACGwB,SAAUD,EAAI,EACdL,UAAU,6BACVO,iBAAiB,6BACjBC,MAAOJ,EAAKI,KAAK,UAChBJ,EAAKK,OAAO,GAEjB,GAAAb,EAAAC,GAAA,EAACxB,EAAAA,CAAAA,KARKgC,UAdhB,AA+B1B","sources":["webpack://_N_E/./src/components/home/WorkFlowsSection.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import { WorkflowModel } from \"@/model/props\";\r\nimport dynamic from \"next/dynamic\";\r\nimport useSWR from 'swr';\r\n\r\nconst DividerXComponent = dynamic(() => import(\"@/components/common/DividerXComponent\"));\r\nconst SubtitleComponent = dynamic(() => import(\"@/components/common/SubtitleComponent\"));\r\nconst AccordionComponent = dynamic(() => import(\"@/components/common/AccordionComponent\"));\r\nconst fetcher = (url: string) => fetch(url).then((res) => res.json());\r\n\r\nexport default function WorkFlowsSection() {\r\n    const { data, isLoading, error } = useSWR<WorkflowModel[]>(`${process.env.BASE_URL + 'api/workflow'}`, fetcher);\r\n    if (isLoading) return <></>\r\n    if (error) return <></>\r\n    if (!data || data.length < 1) return <></>\r\n    return (\r\n        <div className=\"bg-[#F2EEE6] py-20 flex flex-row justify-center\">\r\n            <div className=\"lg:w-[1200px] md:w-[864px] sm:w-[608px] xs:w-[280px] flex flex-row justify-center lg:px-20 md:px-0 sm:px-0\">\r\n                <div className=\"flex flex-col justify-evenly w-full\">\r\n                    <div className=\"flex flex-row justify-center pb-10\">\r\n                        <SubtitleComponent subTitle={\"Bagaimana Cara Kerjanya?\"} className={\"text-primary lg:text-center md:text-center sm:text-left leading-tight\"} />\r\n                    </div>\r\n                    <DividerXComponent />\r\n                    {\r\n                        data && data.map((item, i) => {\r\n                            return (\r\n                                <div key={i}>\r\n                                    <AccordionComponent\r\n                                        position={i + 1}\r\n                                        className=\"lg:px-12 md:px-12 sm:px-12\"\r\n                                        contentClassName=\"lg:px-12 md:px-12 sm:px-12\"\r\n                                        title={item.title} >\r\n                                        {item.content}\r\n                                    </AccordionComponent>\r\n                                    <DividerXComponent />\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"names":["DividerXComponent","dynamic","Promise","all","__webpack_require__","e","then","bind","SubtitleComponent","AccordionComponent","fetcher","fetch","url","res","json","WorkFlowsSection","data","isLoading","error","useSWR","concat","process","length","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Fragment","div","className","jsxs","subTitle","map","item","i","position","contentClassName","title","content"],"sourceRoot":""}