{"version":3,"file":"static/chunks/2535.6a9a3320aec1e9f6.js","mappings":"6MAMA,IAAMA,EAAoBC,IAAQ,IAAMC,QAAAC,GAAA,EAAAC,EAAAC,CAAA,OAAAD,EAAAC,CAAA,SAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,OAAO,wCAA4CI,IAAK,KAC1FC,EAAU,GAAiBC,MAAMC,GAAKL,IAAI,CAAC,GAASM,EAAIC,IAAI,IAEnD,SAASC,GAAyB,CAC7C,GAAM,CAAEC,KAAAA,CAAAA,CAAMC,UAAAA,CAAAA,CAAWC,MAAAA,CAAAA,CAAO,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,EAAwB,GAAyCC,MAAA,CAAtCC,4CAAyCX,UACvG,GACIQ,GACA,CAACF,GAAQA,EAAKM,MAAM,CAAG,EAFL,GAAAC,EAAAC,GAAA,EAAAD,EAAAE,QAAA,KAIlB,GAAAF,EAAAG,IAAA,EAAAH,EAAAE,QAAA,YACI,GAAAF,EAAAC,GAAA,EAACvB,EAAAA,CAAAA,GACD,GAAAsB,EAAAC,GAAA,EAACG,MAAAA,CAAIC,UAAU,wGAEPZ,EAAKa,GAAG,CAAC,CAACC,EAAMC,IAERA,EAAI,GAAK,EACL,GAAAR,EAAAG,IAAA,EAAAH,EAAAE,QAAA,YACI,GAAAF,EAAAG,IAAA,EAACC,MAAAA,CAAIC,UAAU,gEACX,GAAAL,EAAAC,GAAA,EAACQ,IAAKA,CAACC,IAAKZ,+BAAuBS,EAAKI,KAAK,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,IAAKP,EAAKO,GAAG,GACrF,GAAAd,EAAAC,GAAA,EAACc,KAAAA,CAAGV,UAAU,oHAA4GE,EAAKS,IAAI,GACnI,GAAAhB,EAAAC,GAAA,EAACgB,IAAAA,CAAEZ,UAAU,wGAAgGE,EAAKW,QAAQ,MAE9H,GAAAlB,EAAAC,GAAA,EAACvB,EAAAA,CAAkB2B,UAAW,gCAGlC,GAAAL,EAAAG,IAAA,EAAAH,EAAAE,QAAA,YACI,GAAAF,EAAAG,IAAA,EAACC,MAAAA,CAAIC,UAAU,gEACX,GAAAL,EAAAC,GAAA,EAACQ,IAAKA,CAACC,IAAKZ,+BAAuBS,EAAKI,KAAK,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,IAAKP,EAAKO,GAAG,GACrF,GAAAd,EAAAC,GAAA,EAACc,KAAAA,CAAGV,UAAU,oHAA4GE,EAAKS,IAAI,GACnI,GAAAhB,EAAAC,GAAA,EAACgB,IAAAA,CAAEZ,UAAU,wGAAgGE,EAAKW,QAAQ,MAE9H,GAAAlB,EAAAC,GAAA,EAACvB,EAAAA,CAAkB2B,UAAW,wDAErC,MA5BH,AAmC1B","sources":["webpack://_N_E/./src/components/about/ItemsEmployeeComponent.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import dynamic from 'next/dynamic';\r\nimport Image from 'next/image';\r\nimport OGE from \"../../../public/assets/images/oge.png\";\r\nimport useSWR from 'swr';\r\nimport { EmployeeModel } from '@/model/props';\r\n\r\nconst DividerXComponent = dynamic(() => import('@/components/common/DividerXComponent'), { ssr: false });\r\nconst fetcher = (url: string) => fetch(url).then((res) => res.json());\r\n\r\nexport default function ItemsEmployeeComponent() {\r\n    const { data, isLoading, error } = useSWR<EmployeeModel[]>(`${process.env.BASE_URL + 'api/employee'}`, fetcher);\r\n    if (isLoading) return <></>\r\n    if (error) return <></>\r\n    if (!data || data.length < 1) return <></>\r\n    return (\r\n        <>\r\n            <DividerXComponent />\r\n            <div className=\"grid grid-cols-2 xs:grid-cols-1 grid-flow-row justify-center lg:gap-x-20 md:gap-x-10 gap-x-5\">\r\n                {\r\n                    data.map((item, i) => {\r\n                        return (\r\n                            i % 2 != 0 ? (\r\n                                <>\r\n                                    <div className='flex flex-col gap-6 mx-auto my-20 sm:my-10 xs:my-10'>\r\n                                        <Image src={process.env.BASE_URL + item.image} width={391} height={336} alt={item.alt} />\r\n                                        <h4 className='font-dm-sans font-bold text-primary uppercase self-start lg:text-3xl md:text-3xl sm:text-2xl xs:text-2xl'>{item.name}</h4>\r\n                                        <p className='font-dm-sans font-bold text-partial self-start lg:text-2xl md:text-2xl sm:text-xl xs:text-xl'>{item.job_desk}</p>\r\n                                    </div>\r\n                                    <DividerXComponent className={'col-span-2 xs:col-span-1'} />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <div className='flex flex-col gap-6 mx-auto my-20 sm:my-10 xs:my-10'>\r\n                                        <Image src={process.env.BASE_URL + item.image} width={391} height={336} alt={item.alt} />\r\n                                        <h4 className='font-dm-sans font-bold text-primary uppercase self-start lg:text-3xl md:text-3xl sm:text-2xl xs:text-2xl'>{item.name}</h4>\r\n                                        <p className='font-dm-sans font-bold text-partial self-start lg:text-2xl md:text-2xl sm:text-xl xs:text-xl'>{item.job_desk}</p>\r\n                                    </div>\r\n                                    <DividerXComponent className={'lg:hidden md:hidden sm:hidden xs:block col-span-1'} />\r\n                                </>\r\n                            )\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"names":["DividerXComponent","dynamic","Promise","all","__webpack_require__","e","then","bind","ssr","fetcher","fetch","url","res","json","ItemsEmployeeComponent","data","isLoading","error","useSWR","concat","process","length","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Fragment","jsxs","div","className","map","item","i","Image","src","image","width","height","alt","h4","name","p","job_desk"],"sourceRoot":""}